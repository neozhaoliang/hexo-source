<% if (theme.mathjax) { %>
	<script type="text/x-mathjax-config">
		MathJax.Hub.Config({
  		tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]},
  		tex: 'ams'
		});
	</script>


	<% if(page.teximage){ %>
		<script type="text/x-mathjax-config">
			MathJax.Hub.Register.StartupHook("TeX Jax Ready",function () {
			  var TEX = MathJax.InputJax.TeX,
				  MML = MathJax.ElementJax.mml;
			  var CheckDimen = function (dimen) {
				if (dimen === "" ||
					dimen.match(/^\s*([-+]?(\.\d+|\d+(\.\d*)?))\s*(pt|em|ex|mu|px|mm|cm|in|pc)\s*$/))
						return dimen.replace(/ /g,"");
				TEX.Error("Bad dimension for image: "+dimen);
			  };
			  TEX.Definitions.macros.img = "myImage";
			  TEX.Parse.Augment({
				myImage: function (name) {
				  var src = this.GetArgument(name),
					  valign = CheckDimen(this.GetArgument(name)),
					  width  = CheckDimen(this.GetArgument(name)),
					  height = CheckDimen(this.GetArgument(name));
				  var def = {src:src};
				  if (valign) {def.valign = valign}
				  if (width)  {def.width  = width}
				  if (valign) {def.height = height}
				  this.Push(this.mmlToken(MML.mglyph().With(def)));
				}
			  });
			});
		</script>
		<script type="text/javascript"
			src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS_HTML"></script>

		<% } else{ %>

			<script type="text/javascript"
				src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/es5/tex-mml-svg.min.js?config=TeX-AMS_HTML"></script>

			<% } %>
				<% } %>